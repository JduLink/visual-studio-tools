<#@ template debug="false" hostspecific="false" language="VB" #>
<#@ assembly name="Salesforce.VisualStudio.Services.dll" #>
<#@ import namespace="Salesforce.VisualStudio.Services.ConnectedService.CodeModel" #>
<#@ import namespace="System.CodeDom.Compiler" #>
<#@ output extension=".vb" #>
<#@ parameter type="Salesforce.VisualStudio.Services.ConnectedService.CodeModel.GeneratedObject" name="generatedObject" #>
Imports Newtonsoft.Json
Imports Salesforce.Common.Attributes
Imports System.ComponentModel.DataAnnotations

Namespace <#= generatedObject.Service.ModelsNamespace.Substring(generatedObject.Service.DefaultNamespace.Length + 1) #>
    Public Class <#= Me.GetQualifiedName(generatedObject.Model.Name, "_Type") #>
<#
' Generate the simple storage properties.
For Each storageProperty As GeneratedStorageProperty In generatedObject.StorageProperties
    If String.Equals(storageProperty.Model.SoapType, "urn:address", StringComparison.OrdinalIgnoreCase) Then
        Continue For
    End If

    If storageProperty.IsKey Then
#>
        <Key>
<#
    End If

    If storageProperty.Model.Label IsNot Nothing AndAlso storageProperty.Model.Label <> storageProperty.Model.Name Then
#>
        <Display(Name:="<#= storageProperty.Model.Label #>")>
<#
    End If

    Select Case storageProperty.Model.Type
        Case "string"
#>
        <StringLength(<#= storageProperty.Model.Length #>)>
<#
        Case "phone"
#>
        <Phone>
<#
        Case "email"
#>
        <EmailAddress>
<#
        Case "url"
#>
        <Url>
<#
    End Select

    Dim createableUpdateable As String = String.Empty
    If Not storageProperty.Model.Createable Then
        createableUpdateable += "Createable(False)"
    End If
    ' BUG: As of 9/25/14, Salesforce doesn't set Updateable as False on the OwnerId property, which is only createable.
    If Not storageProperty.Model.Updateable OrElse storageProperty.Model.Name = "OwnerId" Then
        createableUpdateable += If((createableUpdateable.Length > 0), ", Updateable(False)", "Updateable(False)")
    End If
    If createableUpdateable.Length > 0 Then
#>
        <<#= createableUpdateable #>>
<#
    End If

    Dim propertyName As String = Me.GetQualifiedName(storageProperty.Model.Name, "_Property")
    If Not String.Equals(propertyName, storageProperty.Model.Name, StringComparison.OrdinalIgnoreCase) Then
#>
        <JsonProperty("<#= storageProperty.Model.Name #>")>
<#
    End If
#>
        Public Property <#= propertyName #> As <#= Me.GetFriendlyTypeName(storageProperty) #>

<#
Next
#>
    End Class
End Namespace
<#+
Private vbCodeDomProvider As CodeDomProvider = CodeDomProvider.CreateProvider("VisualBasic")

Private Function GetFriendlyTypeName(storageProperty As GeneratedStorageProperty) As String
    Dim typeName As String = storageProperty.ClrType.Name

    If storageProperty.ClrType.IsArray Then
        typeName = typeName.Replace("[]", "()")
    End If

    If storageProperty.IsNullableType Then
        typeName = "Nullable(Of " + typeName + ")"
    End If

    Return typeName
End Function

Private Function GetQualifiedName(name As String, suffix As String) As String
    If Me.IsReservedKeyword(name) Then
        Return name + suffix
    Else
        Return name
    End If
End Function

Private Function IsReservedKeyword(identifier As String) As Boolean
    Dim escapedIdentifier As String = Me.vbCodeDomProvider.CreateEscapedIdentifier(identifier)
    Return Not String.Equals(escapedIdentifier, identifier, StringComparison.OrdinalIgnoreCase)
End Function
#>